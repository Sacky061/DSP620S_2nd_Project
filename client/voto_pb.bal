import ballerina/grpc;

public type VoToBlockingClient client object {

    *grpc:AbstractClientEndpoint;

    private grpc:Client grpcClient;

    public function __init(string url, grpc:ClientConfiguration? config = ()) {
        // initialize client endpoint.
        self.grpcClient = new(url, config);
        checkpanic self.grpcClient.initStub(self, "blocking", ROOT_DESCRIPTOR, getDescriptorMap());
    }

    public remote function ballotDescription(ballotInfo req, grpc:Headers? headers = ()) returns ([string, grpc:Headers]|grpc:Error) {
        
        var payload = check self.grpcClient->blockingExecute("src.VoTo/ballotDescription", req, headers);
        grpc:Headers resHeaders = new;
        anydata result = ();
        [result, resHeaders] = payload;
        return [result.toString(), resHeaders];
    }

    public remote function voterProfile(voterInfo req, grpc:Headers? headers = ()) returns ([string, grpc:Headers]|grpc:Error) {
        
        var payload = check self.grpcClient->blockingExecute("src.VoTo/voterProfile", req, headers);
        grpc:Headers resHeaders = new;
        anydata result = ();
        [result, resHeaders] = payload;
        return [result.toString(), resHeaders];
    }

    public remote function votingPeriod(votingInfo req, grpc:Headers? headers = ()) returns ([string, grpc:Headers]|grpc:Error) {
        
        var payload = check self.grpcClient->blockingExecute("src.VoTo/votingPeriod", req, headers);
        grpc:Headers resHeaders = new;
        anydata result = ();
        [result, resHeaders] = payload;
        return [result.toString(), resHeaders];
    }

    public remote function votingOutcomeDeadline(outcomeInfo req, grpc:Headers? headers = ()) returns ([string, grpc:Headers]|grpc:Error) {
        
        var payload = check self.grpcClient->blockingExecute("src.VoTo/votingOutcomeDeadline", req, headers);
        grpc:Headers resHeaders = new;
        anydata result = ();
        [result, resHeaders] = payload;
        return [result.toString(), resHeaders];
    }

};

public type VoToClient client object {

    *grpc:AbstractClientEndpoint;

    private grpc:Client grpcClient;

    public function __init(string url, grpc:ClientConfiguration? config = ()) {
        // initialize client endpoint.
        self.grpcClient = new(url, config);
        checkpanic self.grpcClient.initStub(self, "non-blocking", ROOT_DESCRIPTOR, getDescriptorMap());
    }

    public remote function ballotDescription(ballotInfo req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("src.VoTo/ballotDescription", req, msgListener, headers);
    }

    public remote function voterProfile(voterInfo req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("src.VoTo/voterProfile", req, msgListener, headers);
    }

    public remote function votingPeriod(votingInfo req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("src.VoTo/votingPeriod", req, msgListener, headers);
    }

    public remote function votingOutcomeDeadline(outcomeInfo req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("src.VoTo/votingOutcomeDeadline", req, msgListener, headers);
    }

};

public type ballotInfo record {|
    string candidate = "";
    string position = "";
    string party = "";
    string voteStatus = "";
    
|};


public type voterInfo record {|
    string id = "";
    string firstName = "";
    string lastName = "";
    string dob = "";
    string country = "";
    string region = "";
    string constituency = "";
    
|};


public type votingInfo record {|
    string votingDate = "";
    string votingTime = "";
    
|};


public type outcomeInfo record {|
    string outcomeDeadlineDate = "";
    string outcomeDeadlineTime = "";
    
|};



const string
function getDescriptorMap() returns map<string> {
    return {
        "voto.proto
        "google/protobuf/wrappers.proto
        
    };
}

